declare i32 @getint()          ; 读取一个整数
declare i32 @getchar()     ; 读取一个字符
declare void @putint(i32)      ; 输出一个整数
declare void @putch(i32)       ; 输出一个字符

define dso_local i32 @main() {
    %LocalVar0 = alloca i32
    %LocalVar1 = alloca i32
    store i32 0, i32* %LocalVar1
    store i32 1, i32* %LocalVar0
    %LocalVar2 = load i32, i32* %LocalVar1
    %LocalVar3 = icmp eq i32 %LocalVar2, 0
    br i1 %LocalVar3, label %Label_1, label %Label_2
    %Label_1 : 
    store i32 2, i32* %LocalVar0
    store i32 3, i32* %LocalVar0
    store i32 4, i32* %LocalVar0
    br label %Label_2
    %Label_2 : 
    %LocalVar4 = load i32, i32* %LocalVar0
    call void @putint(i32 %LocalVar4)
    call void @putch(i32 10)
    ret i32 0
}
