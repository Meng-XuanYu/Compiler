declare i32 @getint()          ; 读取一个整数
declare i32 @getchar()     ; 读取一个字符
declare void @putint(i32)      ; 输出一个整数
declare void @putch(i32)       ; 输出一个字符

define dso_local void @fun1() {
    %LocalVar0 = alloca i32
    %LocalVar1 = alloca i32
    %LocalVar2 = alloca i32
    %LocalVar8 = alloca i32
    store i32 4, i32* %LocalVar1
    store i32 6, i32* %LocalVar2
    %LocalVar3 = load i32, i32* %LocalVar1
    store i32 %LocalVar3, i32* %LocalVar2
    store i32 3, i32* %LocalVar0
    %LocalVar4 = load i32, i32* %LocalVar0
    %LocalVar5 = srem i32 %LocalVar4, 20
    %LocalVar6 = sub i32 %LocalVar5, 1
    %LocalVar7 = add i32 %LocalVar6, 9
    store i32 %LocalVar7, i32* %LocalVar0
    store i32 0, i32* %LocalVar8
    br label %Label_1
Label_1: 
    %LocalVar9 = load i32, i32* %LocalVar8
    %LocalVar10 = icmp sle i32 %LocalVar9, 7
    %LocalVar11 = zext i1 %LocalVar10 to i32
    %LocalVar12 = icmp ne i32 %LocalVar11, 0
    br i1 %LocalVar12, label %Label_3, label %Label_2
Label_3: 
    %LocalVar13 = load i32, i32* %LocalVar8
    %LocalVar14 = add i32 %LocalVar13, 1
    store i32 %LocalVar14, i32* %LocalVar8
    %LocalVar15 = load i32, i32* %LocalVar0
    %LocalVar16 = load i32, i32* %LocalVar8
    %LocalVar17 = icmp eq i32 %LocalVar15, %LocalVar16
    %LocalVar18 = load i32, i32* %LocalVar8
    %LocalVar19 = zext i1 %LocalVar17 to i32
    %LocalVar20 = icmp ne i32 %LocalVar19, 0
    br i1 %LocalVar20, label %Label_4, label %Label_5
Label_4: 
    %LocalVar21 = load i32, i32* %LocalVar1
    %LocalVar22 = load i32, i32* %LocalVar0
    %LocalVar23 = add i32 %LocalVar21, %LocalVar22
    store i32 %LocalVar23, i32* %LocalVar1
    br label %Label_1
    br label %Label_5
Label_5: 
    %LocalVar24 = load i32, i32* %LocalVar0
    %LocalVar25 = sub i32 %LocalVar24, 1
    store i32 %LocalVar25, i32* %LocalVar0
    br label %Label_1
Label_2: 
    %LocalVar26 = load i32, i32* %LocalVar0
    %LocalVar27 = load i32, i32* %LocalVar1
    %LocalVar28 = load i32, i32* %LocalVar2
    call void @putch(i32 106)
    call void @putch(i32 32)
    call void @putch(i32 58)
    call void @putch(i32 32)
    call void @putint(i32 %LocalVar26)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putch(i32 107)
    call void @putch(i32 32)
    call void @putch(i32 58)
    call void @putch(i32 32)
    call void @putint(i32 %LocalVar27)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putch(i32 108)
    call void @putch(i32 32)
    call void @putch(i32 58)
    call void @putch(i32 32)
    call void @putint(i32 %LocalVar28)
    call void @putch(i32 10)
    ret void
}

define dso_local i32 @fun2(i32 %param0) {
    %LocalVar1 = alloca i32
    %LocalVar2 = alloca i32
    %LocalVar3 = alloca i32
    store i32 %param0, i32* %LocalVar3
    store i32 1, i32* %LocalVar1
    store i32 1, i32* %LocalVar2
    br label %Label_6
Label_6: 
    %LocalVar4 = load i32, i32* %LocalVar3
    %LocalVar5 = icmp sge i32 %LocalVar4, 1
    %LocalVar6 = zext i1 %LocalVar5 to i32
    %LocalVar7 = icmp ne i32 %LocalVar6, 0
    br i1 %LocalVar7, label %Label_8, label %Label_7
Label_8: 
    %LocalVar8 = load i32, i32* %LocalVar1
    %LocalVar9 = load i32, i32* %LocalVar3
    %LocalVar10 = mul i32 %LocalVar8, %LocalVar9
    store i32 %LocalVar10, i32* %LocalVar1
    %LocalVar11 = load i32, i32* %LocalVar3
    %LocalVar12 = sub i32 %LocalVar11, 1
    store i32 %LocalVar12, i32* %LocalVar3
    %LocalVar13 = load i32, i32* %LocalVar3
    %LocalVar14 = icmp eq i32 %LocalVar13, 1
    %LocalVar15 = zext i1 %LocalVar14 to i32
    %LocalVar16 = icmp ne i32 %LocalVar15, 0
    br i1 %LocalVar16, label %Label_9, label %Label_10
Label_9: 
    br label %Label_7
    br label %Label_11
Label_10: 
    %LocalVar17 = load i32, i32* %LocalVar3
    %LocalVar18 = icmp ne i32 %LocalVar17, 1
    %LocalVar19 = zext i1 %LocalVar18 to i32
    %LocalVar20 = icmp ne i32 %LocalVar19, 0
    br i1 %LocalVar20, label %Label_12, label %Label_13
Label_12: 
    %LocalVar21 = load i32, i32* %LocalVar2
    %LocalVar22 = add i32 %LocalVar21, 1
    store i32 %LocalVar22, i32* %LocalVar2
    br label %Label_13
Label_13: 
    br label %Label_11
Label_11: 
    br label %Label_6
Label_7: 
    %LocalVar23 = load i32, i32* %LocalVar1
    %LocalVar24 = load i32, i32* %LocalVar2
    call void @putch(i32 97)
    call void @putch(i32 33)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 32)
    call void @putint(i32 %LocalVar23)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putch(i32 110)
    call void @putch(i32 117)
    call void @putch(i32 109)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 32)
    call void @putint(i32 %LocalVar24)
    call void @putch(i32 10)
    ret i32 1
}

define dso_local i32 @fun3(i32 %param0, i32 %param1) {
    %LocalVar2 = alloca i32
    %LocalVar4 = alloca i32
    store i32 %param0, i32* %LocalVar2
    store i32 %param1, i32* %LocalVar4
    %LocalVar3 = load i32, i32* %LocalVar2
    %LocalVar5 = load i32, i32* %LocalVar4
    %LocalVar6 = icmp sgt i32 %LocalVar3, %LocalVar5
    %LocalVar7 = zext i1 %LocalVar6 to i32
    %LocalVar8 = icmp ne i32 %LocalVar7, 0
    br i1 %LocalVar8, label %Label_14, label %Label_15
Label_14: 
    %LocalVar9 = load i32, i32* %LocalVar2
    ret i32 %LocalVar9
    br label %Label_16
Label_15: 
    %LocalVar10 = load i32, i32* %LocalVar2
    %LocalVar11 = load i32, i32* %LocalVar4
    %LocalVar12 = icmp slt i32 %LocalVar10, %LocalVar11
    %LocalVar13 = zext i1 %LocalVar12 to i32
    %LocalVar14 = icmp ne i32 %LocalVar13, 0
    br i1 %LocalVar14, label %Label_17, label %Label_18
Label_17: 
    %LocalVar15 = load i32, i32* %LocalVar4
    ret i32 %LocalVar15
    br label %Label_18
Label_18: 
    br label %Label_16
Label_16: 
    %LocalVar16 = load i32, i32* %LocalVar2
    ret i32 %LocalVar16
}

define dso_local i32 @gcd(i32 %param0, i32 %param1) {
    %LocalVar2 = srem i32 %param0, %param1
    %LocalVar3 = icmp eq i32 %LocalVar2, 0
    %LocalVar4 = zext i1 %LocalVar3 to i32
    %LocalVar5 = icmp ne i32 %LocalVar4, 0
    br i1 %LocalVar5, label %Label_19, label %Label_20
Label_19: 
    ret i32 %param1
    br label %Label_20
Label_20: 
    %LocalVar6 = srem i32 %param0, %param1
    %LocalVar7 = call i32 @gcd(i32 %param1, i32 %LocalVar6)
    ret i32 %LocalVar7
}

define dso_local i32 @lcm(i32 %param0, i32 %param1) {
    %LocalVar2 = alloca i32
    %LocalVar3 = call i32 @gcd(i32 %param0, i32 %param1)
    store i32 %LocalVar3, i32* %LocalVar2
    %LocalVar4 = mul i32 %param0, %param1
    %LocalVar5 = load i32, i32* %LocalVar2
    %LocalVar6 = sdiv i32 %LocalVar4, %LocalVar5
    ret i32 %LocalVar6
}

define dso_local void @fun4(i32 %param0, i32 %param1, i32 %param2) {
    %LocalVar3 = alloca i32
    %LocalVar4 = add i32 %param0, %param1
    %LocalVar5 = sub i32 %LocalVar4, %param2
    %LocalVar6 = mul i32 %LocalVar5, %param0
    store i32 %LocalVar6, i32* %LocalVar3
    %LocalVar7 = load i32, i32* %LocalVar3
    call void @putint(i32 %LocalVar7)
    call void @putch(i32 10)
    ret void
}

define dso_local i32 @fun5(i32 %param0) {
    %LocalVar1 = alloca i32
    store i32 %param0, i32* %LocalVar1
    %LocalVar2 = load i32, i32* %LocalVar1
    %LocalVar3 = icmp eq i32 %LocalVar2, 1
    %LocalVar4 = zext i1 %LocalVar3 to i32
    %LocalVar5 = icmp ne i32 %LocalVar4, 0
    br i1 %LocalVar5, label %Label_21, label %Label_22
Label_21: 
    ret i32 1
    br label %Label_23
Label_22: 
    %LocalVar6 = load i32, i32* %LocalVar1
    %LocalVar7 = icmp eq i32 %LocalVar6, 2
    %LocalVar8 = zext i1 %LocalVar7 to i32
    %LocalVar9 = icmp ne i32 %LocalVar8, 0
    br i1 %LocalVar9, label %Label_24, label %Label_25
Label_24: 
    ret i32 1
    br label %Label_25
Label_25: 
    br label %Label_23
Label_23: 
    %LocalVar10 = load i32, i32* %LocalVar1
    %LocalVar11 = sub i32 %LocalVar10, 1
    %LocalVar12 = call i32 @fun5(i32 %LocalVar11)
    %LocalVar13 = load i32, i32* %LocalVar1
    %LocalVar14 = sub i32 %LocalVar13, 2
    %LocalVar15 = call i32 @fun5(i32 %LocalVar14)
    %LocalVar16 = add i32 %LocalVar12, %LocalVar15
    ret i32 %LocalVar16
}

define dso_local i32 @main() {
    %LocalVar3 = alloca i32
    %LocalVar4 = alloca i32
    %LocalVar13 = alloca i32
    %LocalVar16 = alloca i32
    call void @fun1()
    %LocalVar0 = call i32 @fun2(i32 6)
    %LocalVar1 = call i32 @fun3(i32 3, i32 6)
    %LocalVar2 = call i32 @fun3(i32 2, i32 %LocalVar1)
    call void @putint(i32 %LocalVar2)
    call void @putch(i32 10)
    call void @putch(i32 115)
    call void @putch(i32 99)
    call void @putch(i32 97)
    call void @putch(i32 110)
    call void @putch(i32 102)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putch(i32 98)
    call void @putch(i32 32)
    call void @putch(i32 116)
    call void @putch(i32 111)
    call void @putch(i32 32)
    call void @putch(i32 103)
    call void @putch(i32 101)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 103)
    call void @putch(i32 99)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 110)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 108)
    call void @putch(i32 99)
    call void @putch(i32 109)
    call void @putch(i32 10)
    %LocalVar5 = call i32 @getint()
    store i32 %LocalVar5, i32* %LocalVar3
    %LocalVar6 = call i32 @getint()
    store i32 %LocalVar6, i32* %LocalVar4
    %LocalVar7 = load i32, i32* %LocalVar3
    %LocalVar8 = load i32, i32* %LocalVar4
    %LocalVar9 = call i32 @gcd(i32 %LocalVar7, i32 %LocalVar8)
    call void @putch(i32 103)
    call void @putch(i32 99)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putint(i32 %LocalVar9)
    call void @putch(i32 10)
    %LocalVar10 = load i32, i32* %LocalVar3
    %LocalVar11 = load i32, i32* %LocalVar4
    %LocalVar12 = call i32 @lcm(i32 %LocalVar10, i32 %LocalVar11)
    call void @putch(i32 108)
    call void @putch(i32 99)
    call void @putch(i32 109)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putint(i32 %LocalVar12)
    call void @putch(i32 10)
    %LocalVar14 = call i32 @getint()
    store i32 %LocalVar14, i32* %LocalVar13
    %LocalVar15 = load i32, i32* %LocalVar13
    call void @fun4(i32 %LocalVar15, i32 3, i32 10)
    call void @putch(i32 115)
    call void @putch(i32 99)
    call void @putch(i32 97)
    call void @putch(i32 110)
    call void @putch(i32 102)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 32)
    call void @putch(i32 116)
    call void @putch(i32 111)
    call void @putch(i32 32)
    call void @putch(i32 103)
    call void @putch(i32 101)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 70)
    call void @putch(i32 105)
    call void @putch(i32 98)
    call void @putch(i32 111)
    call void @putch(i32 110)
    call void @putch(i32 97)
    call void @putch(i32 99)
    call void @putch(i32 99)
    call void @putch(i32 105)
    call void @putch(i32 10)
    %LocalVar17 = call i32 @getint()
    store i32 %LocalVar17, i32* %LocalVar16
    %LocalVar18 = load i32, i32* %LocalVar16
    %LocalVar19 = call i32 @fun5(i32 %LocalVar18)
    call void @putch(i32 102)
    call void @putch(i32 105)
    call void @putch(i32 98)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putint(i32 %LocalVar19)
    call void @putch(i32 10)
    ret i32 0
}
